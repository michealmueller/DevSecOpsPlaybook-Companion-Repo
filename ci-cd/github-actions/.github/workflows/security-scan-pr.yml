name: Security Scan on PR

on: [pull_request]

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Static Application Security Testing (SAST)
    - name: Run Semgrep SAST
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
        generateSarif: "1"
      continue-on-error: true

    - name: Upload Semgrep SARIF
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: semgrep.sarif

    # Software Composition Analysis (SCA)
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: '${{ github.event.repository.name }}'
        path: '.'
        format: 'SARIF'
        args: '--enableRetired'
      continue-on-error: true

    - name: Upload OWASP Dependency Check SARIF
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: reports/dependency-check-report.sarif

    # Container Security Scanning
    - name: Build Docker image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    # Infrastructure as Code Scanning
    - name: Run Checkov IaC scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: terraform/
        framework: terraform
        output_format: sarif
        output_file_path: reports/checkov.sarif
      continue-on-error: true

    - name: Upload Checkov SARIF
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: reports/checkov.sarif

    # Secrets Detection
    - name: Run TruffleHog secrets scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
      continue-on-error: true

    - name: Comment PR with security findings
      uses: actions/github-script@v6
      if: always()
      with:
        script: |
          const fs = require('fs');
          let comment = '## üîí Security Scan Results\n\n';
          
          // Add security scan results summary
          comment += '### Security Scan Summary\n';
          comment += '- ‚úÖ SAST: Completed\n';
          comment += '- ‚úÖ SCA: Completed\n';
          comment += '- ‚úÖ Container Scan: Completed\n';
          comment += '- ‚úÖ IaC Scan: Completed\n';
          comment += '- ‚úÖ Secrets Detection: Completed\n\n';
          
          comment += 'üìä **Detailed results are available in the Security tab of this repository.**\n\n';
          comment += '‚ö†Ô∏è **Please review any security findings before merging this PR.**\n\n';
          comment += '---\n';
          comment += '*This comment was automatically generated by the security scanning workflow.*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
