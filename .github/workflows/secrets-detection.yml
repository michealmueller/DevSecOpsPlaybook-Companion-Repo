name: Secrets Detection

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  secrets-scan:
    name: Secrets Detection Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog secrets scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    - name: Run detect-secrets
      run: |
        python -m pip install detect-secrets
        detect-secrets scan --baseline .secrets.baseline
        detect-secrets audit .secrets.baseline

    - name: Check for hardcoded AWS credentials
      run: |
        if grep -r "AKIA[0-9A-Z]{16}" . --exclude-dir=.git; then
          echo "❌ Potential AWS Access Key found!"
          exit 1
        fi
        
        if grep -r "aws_access_key_id" . --exclude-dir=.git; then
          echo "❌ Potential AWS access key configuration found!"
          exit 1
        fi

    - name: Check for hardcoded API keys
      run: |
        # Check for common API key patterns
        if grep -r "sk-[a-zA-Z0-9]{20,}" . --exclude-dir=.git; then
          echo "❌ Potential OpenAI API key found!"
          exit 1
        fi
        
        if grep -r "ghp_[a-zA-Z0-9]{36}" . --exclude-dir=.git; then
          echo "❌ Potential GitHub Personal Access Token found!"
          exit 1
        fi

    - name: Check for database credentials
      run: |
        if grep -r "mongodb://.*:[^@]*@" . --exclude-dir=.git; then
          echo "❌ Potential MongoDB connection string with credentials found!"
          exit 1
        fi
        
        if grep -r "postgres://.*:[^@]*@" . --exclude-dir=.git; then
          echo "❌ Potential PostgreSQL connection string with credentials found!"
          exit 1
        fi

    - name: Generate secrets baseline (if not exists)
      run: |
        if [ ! -f .secrets.baseline ]; then
          detect-secrets scan --baseline .secrets.baseline
          echo "Created .secrets.baseline file"
        fi

    - name: Update secrets baseline
      run: |
        detect-secrets scan --update .secrets.baseline
        if [ -n "$(git status --porcelain .secrets.baseline)" ]; then
          echo "⚠️  Secrets baseline updated. Please review and commit changes."
        fi
